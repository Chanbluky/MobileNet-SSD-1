name: "MobileNetV2-SSD_300x300_train"
layer {
  name: "data"
  type: "AnnotatedData"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    mirror: true
    mean_value: 104
    mean_value: 117
    mean_value: 123
    resize_param {
      prob: 1
      resize_mode: WARP
      height: 300
      width: 300
      interp_mode: LINEAR
      interp_mode: AREA
      interp_mode: NEAREST
      interp_mode: CUBIC
      interp_mode: LANCZOS4
    }
    emit_constraint {
      emit_type: CENTER
    }
    distort_param {
      brightness_prob: 0.5
      brightness_delta: 32
      contrast_prob: 0.5
      contrast_lower: 0.5
      contrast_upper: 1.5
      hue_prob: 0.5
      hue_delta: 18
      saturation_prob: 0.5
      saturation_lower: 0.5
      saturation_upper: 1.5
      random_order_prob: 0.0
    }
    expand_param {
      prob: 0.5
      max_expand_ratio: 4.0
    }
  }
  data_param {
    source: "data/VOC0712/lmdb/VOC0712_trainval_lmdb"
    batch_size: 16
    backend: LMDB
  }
  annotated_data_param {
    batch_sampler {
      max_sample: 1
      max_trials: 1
    }
    batch_sampler {
      sampler {
        min_scale: 0.3
        max_scale: 1.0
        min_aspect_ratio: 0.5
        max_aspect_ratio: 2.0
      }
      sample_constraint {
        min_jaccard_overlap: 0.1
      }
      max_sample: 1
      max_trials: 50
    }
    batch_sampler {
      sampler {
        min_scale: 0.3
        max_scale: 1.0
        min_aspect_ratio: 0.5
        max_aspect_ratio: 2.0
      }
      sample_constraint {
        min_jaccard_overlap: 0.3
      }
      max_sample: 1
      max_trials: 50
    }
    batch_sampler {
      sampler {
        min_scale: 0.3
        max_scale: 1.0
        min_aspect_ratio: 0.5
        max_aspect_ratio: 2.0
      }
      sample_constraint {
        min_jaccard_overlap: 0.5
      }
      max_sample: 1
      max_trials: 50
    }
    batch_sampler {
      sampler {
        min_scale: 0.3
        max_scale: 1.0
        min_aspect_ratio: 0.5
        max_aspect_ratio: 2.0
      }
      sample_constraint {
        min_jaccard_overlap: 0.7
      }
      max_sample: 1
      max_trials: 50
    }
    batch_sampler {
      sampler {
        min_scale: 0.3
        max_scale: 1.0
        min_aspect_ratio: 0.5
        max_aspect_ratio: 2.0
      }
      sample_constraint {
        min_jaccard_overlap: 0.9
      }
      max_sample: 1
      max_trials: 50
    }
    batch_sampler {
      sampler {
        min_scale: 0.3
        max_scale: 1.0
        min_aspect_ratio: 0.5
        max_aspect_ratio: 2.0
      }
      sample_constraint {
        max_jaccard_overlap: 1.0
      }
      max_sample: 1
      max_trials: 50
    }
    label_map_file: "data/VOC0712/labelmap.prototxt"
  }
}
#########Conv1, standard convolution############
layer{
    name: "Conv1"
    type: "Convolution"
    bottom: "data"
    top: "Conv1"
    param{
        lr_mult: 1.0
        decay_mult: 1.0
    }
    convolution_param{
        num_output: 32
        bias_term: false
        pad: 1
        kernel_size: 3
        stride: 2
        weight_filler{
            type: "msra"
        }
    }
}
layer{
    name: "Conv1/bn"
    type: "BatchNorm"
    bottom: "Conv1"
    top: "Conv1"
    include {
        phase: TEST
    }
    batch_norm_param {
        use_global_stats: true
        eps: 1e-5
    }
}
layer{
    name: "Conv1/bn"
    type: "BatchNorm"
    bottom: "Conv1"
    top: "Conv1"
    include {
        phase: TRAIN
    }
    batch_norm_param {
        use_global_stats: false
        eps: 1e-5
    }
}
layer{
    name: "Conv1/scale"
    type: "Scale"
    bottom: "Conv1"
    top: "Conv1"
    param {
        lr_mult: 1
        decay_mult: 0
    }
    param {
        lr_mult: 1
        decay_mult: 0
    }
    scale_param {
        bias_term: true
    }
}
layer{
    name: "Conv1/relu"
    type: "ReLU"
    bottom: "Conv1"
    top: "Conv1"
}
##############Conv2, bottleneck, repeat 1 times##################
layer{
    name: "Conv2/expand"
    type: "Convolution"
    bottom: "Conv1"
    top: "Conv2/expand"
    param {
        lr_mult: 1.0
        decay_mult: 1.0
    }
    convolution_param {
        num_output: 32
        bias_term: false
        kernel_size: 1
        weight_filler {
            type: "msra"
        }
    }
}
layer{
    name: "Conv2/expand/bn"
    type: "BatchNorm"
    bottom: "Conv2/expand"
    top: "Conv2/expand"
    include {
        phase: TEST
    }
    batch_norm_param {
        use_global_stats: true
        eps: 1e-5
    }
}
layer{
    name: "Conv2/expand/bn"
    type: "BatchNorm"
    bottom: "Conv2/expand"
    top: "Conv2/expand"
    include {
        phase: TRAIN
    }
    batch_norm_param {
        use_global_stats: false
        eps: 1e-5
    }
}
layer{
    name: "Conv2/expand/scale"
    type: "Scale"
    bottom: "Conv2/expand"
    top: "Conv2/expand"
    param {
        lr_mult: 1
        decay_mult: 0
    }
    param {
        lr_mult: 1
        decay_mult: 0
    }
    scale_param {
        bias_term: true
    }
}
layer{
    name: "Conv2/expand/relu"
    type: "ReLU"
    bottom: "Conv2/expand"
    top: "Conv2/expand"
}
layer{
    name: "Conv2/depthwise"
    type: "Convolution"
    bottom: "Conv2/expand"
    top: "Conv2/depthwise"
    param {
        lr_mult: 1.0
        decay_mult: 1.0
    }
    convolution_param {
        num_output: 32
        bias_term: false
        pad: 1
        kernel_size: 3
        group: 32
        stride: 1
        weight_filler {
            type: "msra"
        }
        engine: CAFFE
    }
}
layer{
    name: "Conv2/depthwise/bn"
    type: "BatchNorm"
    bottom: "Conv2/depthwise"
    top: "Conv2/depthwise"
    include {
        phase: TEST
    }
    batch_norm_param {
        use_global_stats: true
        eps: 1e-5
    }
}
layer{
    name: "Conv2/depthwise/bn"
    type: "BatchNorm"
    bottom: "Conv2/depthwise"
    top: "Conv2/depthwise"
    include {
        phase: TRAIN
    }
    batch_norm_param {
        use_global_stats: false
        eps: 1e-5
    }
}
layer{
    name: "Conv2/depthwise/scale"
    type: "Scale"
    bottom: "Conv2/depthwise"
    top: "Conv2/depthwise"
    scale_param {
        bias_term: true
    }
    param {
        lr_mult: 1
        decay_mult: 0
    }
    param {
          lr_mult: 1
        decay_mult: 0
    }
}
layer{
    name: "Conv2/depthwise/relu"
    type: "ReLU"
    bottom: "Conv2/depthwise"
    top: "Conv2/depthwise"
}
layer{
    name: "Conv2/linear"
    type: "Convolution"
    bottom: "Conv2/depthwise"
    top: "Conv2/linear"
    param {
        lr_mult: 1
        decay_mult: 1
    }
    convolution_param {
        num_output: 16
        bias_term: false
        kernel_size: 1
        weight_filler {
            type: "msra"
        }
    }
}
layer{
    name: "Conv2/linear/bn"
    type: "BatchNorm"
    bottom: "Conv2/linear"
    top: "Conv2/linear"
    include {
        phase: TEST
    }
    batch_norm_param {
        use_global_stats: true
        eps: 1e-5
    }
}
layer{
    name: "Conv2/linear/bn"
    type: "BatchNorm"
    bottom: "Conv2/linear"
    top: "Conv2/linear"
    include {
        phase: TRAIN
    }
    batch_norm_param {
        use_global_stats: false
        eps: 1e-5
    }
}
layer{
    name: "Conv2/linear/scale"
    type: "Scale"
    bottom: "Conv2/linear"
    top: "Conv2/linear"
    param {
        lr_mult: 1
        decay_mult: 0
    }
    param {
        lr_mult: 1
        decay_mult: 0
    }
    scale_param {
        bias_term: true
    }
}
##############Conv3, bottleneck, repeat 2 time##################
layer{
    name: "Conv3_1/expand"
    type: "Convolution"
    bottom: "Conv2/linear"
    top: "Conv3_1/expand"
    param {
        lr_mult: 1.0
        decay_mult: 1.0
    }
    convolution_param {
        num_output: 96
        bias_term: false
        kernel_size: 1
        weight_filler {
            type: "msra"
        }
    }
}
layer{
    name: "Conv3_1/expand/bn"
    type: "BatchNorm"
    bottom: "Conv3_1/expand"
    top: "Conv3_1/expand"
    include {
        phase: TEST
    }
    batch_norm_param {
        use_global_stats: true
        eps: 1e-5
    }
}
layer{
    name: "Conv3_1/expand/bn"
    type: "BatchNorm"
    bottom: "Conv3_1/expand"
    top: "Conv3_1/expand"
    include {
        phase: TRAIN
    }
    batch_norm_param {
        use_global_stats: false
        eps: 1e-5
    }
}
layer {
    name: "Conv3_1/expand/scale"
    type: "Scale"
    bottom: "Conv3_1/expand"
    top: "Conv3_1/expand"
    param {
        lr_mult: 1
        decay_mult: 0
    }
    param {
        lr_mult: 1
        decay_mult: 0
    }
    scale_param {
        bias_term: true
    }
}
layer {
    name: "Conv3_1/expand/relu"
    type: "ReLU"
    bottom: "Conv3_1/expand"
    top: "Conv3_1/expand"
}
layer {
    name: "Conv3_1/depthwise"
    type: "Convolution"
    bottom: "Conv3_1/expand"
    top: "Conv3_1/depthwise"
    param {
        lr_mult: 1
        decay_mult: 1
    }
    convolution_param {
        num_output: 96
        bias_term: false
        pad: 1
        kernel_size: 3
        group: 96
        stride: 2
        weight_filler {
            type: "msra"
        }
        engine: CAFFE
    }
}
layer {
    name: "Conv3_1/depthwise/bn"
    type: "BatchNorm"
    bottom: "Conv3_1/depthwise"
    top: "Conv3_1/depthwise"
    include {
        phase: TEST
    }
    batch_norm_param {
        use_global_stats: true
        eps: 1e-5
    }
}
layer {
    name: "Conv3_1/depthwise/bn"
    type: "BatchNorm"
    bottom: "Conv3_1/depthwise"
    top: "Conv3_1/depthwise"
    include {
        phase: TRAIN
    }
    batch_norm_param {
        use_global_stats: false
        eps: 1e-5
    }
}
layer {
    name: "Conv3_1/depthwise/scale"
    type: "Scale"
    bottom: "Conv3_1/depthwise"
    top: "Conv3_1/depthwise"
    param {
        lr_mult: 1
        decay_mult: 0
    }
    param {
        lr_mult: 1
        decay_mult: 0
    }
    scale_param {
        bias_term: true
    }
}
layer {
    name: "Conv3_1/depthwise/relu"
    type: "ReLU"
    bottom: "Conv3_1/depthwise"
    top: "Conv3_1/depthwise"
}
layer {
    name: "Conv3_1/linear"
    type: "Convolution"
    bottom: "Conv3_1/depthwise"
    top: "Conv3_1/linear"
    param {
        lr_mult: 1
        decay_mult: 1
    }
    convolution_param {
        num_output: 24
        bias_term: false
        kernel_size: 1
        weight_filler {
            type: "msra"
        }
    }
}
layer {
    name: "Conv3_1/linear/bn"
    type: "BatchNorm"
    bottom: "Conv3_1/linear"
    top: "Conv3_1/linear"
    include {
        phase: TEST
    }
    batch_norm_param {
        use_global_stats: true
        eps: 1e-5
    }
}
layer {
    name: "Conv3_1/linear/bn"
    type: "BatchNorm"
    bottom: "Conv3_1/linear"
    top: "Conv3_1/linear"
    include {
        phase: TRAIN
    }
    batch_norm_param {
        use_global_stats: false
        eps: 1e-5
    }
}
layer {
    name: "Conv3_1/linear/scale"
    type: "Scale"
    bottom: "Conv3_1/linear"
    top: "Conv3_1/linear"
    param {
        lr_mult: 1
        decay_mult: 0
    }
    param {
        lr_mult: 1
        decay_mult: 0
    }
    scale_param {
        bias_term: true
    }
}
layer{
    name: "Conv3_2/expand"
    type: "Convolution"
    bottom: "Conv3_1/linear"
    top: "Conv3_2/expand"
    param {
        lr_mult: 1.0
        decay_mult: 1.0
    }
    convolution_param {
        num_output: 144
        bias_term: false
        kernel_size: 1
        weight_filler {
            type: "msra"
        }
    }
}
layer{
    name: "Conv3_2/expand/bn"
    type: "BatchNorm"
    bottom: "Conv3_2/expand"
    top: "Conv3_2/expand"
    include {
        phase: TEST
    }
    batch_norm_param {
        use_global_stats: true
        eps: 1e-5
    }
}
layer{
    name: "Conv3_2/expand/bn"
    type: "BatchNorm"
    bottom: "Conv3_2/expand"
    top: "Conv3_2/expand"
    include {
        phase: TRAIN
    }
    batch_norm_param {
        use_global_stats: false
        eps: 1e-5
    }
}
layer {
    name: "Conv3_2/expand/scale"
    type: "Scale"
    bottom: "Conv3_2/expand"
    top: "Conv3_2/expand"
    param {
        lr_mult: 1
        decay_mult: 0
    }
    param {
        lr_mult: 1
        decay_mult: 0
    }
    scale_param {
        bias_term: true
    }
}
layer {
    name: "Conv3_2/expand/relu"
    type: "ReLU"
    bottom: "Conv3_2/expand"
    top: "Conv3_2/expand"
}
layer {
    name: "Conv3_2/depthwise"
    type: "Convolution"
    bottom: "Conv3_2/expand"
    top: "Conv3_2/depthwise"
    param {
        lr_mult: 1
        decay_mult: 1
    }
    convolution_param {
        num_output: 144
        bias_term: false
        pad: 1
        kernel_size: 3
        group: 144
        stride: 1
        weight_filler {
            type: "msra"
        }
        engine: CAFFE
    }
}
layer {
    name: "Conv3_2/depthwise/bn"
    type: "BatchNorm"
    bottom: "Conv3_2/depthwise"
    top: "Conv3_2/depthwise"
    include {
        phase: TEST
    }
    batch_norm_param {
        use_global_stats: true
        eps: 1e-5
    }
}
layer {
    name: "Conv3_2/depthwise/bn"
    type: "BatchNorm"
    bottom: "Conv3_2/depthwise"
    top: "Conv3_2/depthwise"
    include {
        phase: TRAIN
    }
    batch_norm_param {
        use_global_stats: false
        eps: 1e-5
    }
}
layer {
    name: "Conv3_2/depthwise/scale"
    type: "Scale"
    bottom: "Conv3_2/depthwise"
    top: "Conv3_2/depthwise"
    param {
        lr_mult: 1
        decay_mult: 0
    }
    param {
        lr_mult: 1
        decay_mult: 0
    }
    scale_param {
        bias_term: true
    }
}
layer {
    name: "Conv3_2/depthwise/relu"
    type: "ReLU"
    bottom: "Conv3_2/depthwise"
    top: "Conv3_2/depthwise"
}
layer {
    name: "Conv3_2/linear"
    type: "Convolution"
    bottom: "Conv3_2/depthwise"
    top: "Conv3_2/linear"
    param {
        lr_mult: 1
        decay_mult: 1
    }
    convolution_param {
        num_output: 24
        bias_term: false
        kernel_size: 1
        weight_filler {
            type: "msra"
        }
    }
}
layer {
    name: "Conv3_2/linear/bn"
    type: "BatchNorm"
    bottom: "Conv3_2/linear"
    top: "Conv3_2/linear"
    include {
        phase: TEST
    }
    batch_norm_param {
        use_global_stats: true
        eps: 1e-5
    }
}
layer {
    name: "Conv3_2/linear/bn"
    type: "BatchNorm"
    bottom: "Conv3_2/linear"
    top: "Conv3_2/linear"
    include {
        phase: TRAIN
    }
    batch_norm_param {
        use_global_stats: false
        eps: 1e-5
    }
}
layer {
    name: "Conv3_2/linear/scale"
    type: "Scale"
    bottom: "Conv3_2/linear"
    top: "Conv3_2/linear"
    param {
        lr_mult: 1
        decay_mult: 0
    }
    param {
        lr_mult: 1
        decay_mult: 0
    }
    scale_param {
        bias_term: true
    }
}
layer {
  name: "Block_3_2"
  type: "Eltwise"
  bottom: "Conv3_1/linear"
  bottom: "Conv3_2/linear"
  top: "Block_3_2"
}
##############Conv4, bottleneck, repeat 3 times##################
layer {
    name: "Conv4_1/expand"
    type: "Convolution"
    bottom: "Block_3_2"
    top: "Conv4_1/expand"
    param {
        lr_mult: 1.0
        decay_mult: 1.0
    }
    convolution_param {
        num_output: 144
        bias_term: false
        pad: 0
        kernel_size: 1
        stride: 1
        weight_filler {
            type: "msra"
        }
    }
}
layer {
    name: "Conv4_1/expand/bn"
    type: "BatchNorm"
    bottom: "Conv4_1/expand"
    top: "Conv4_1/expand"
    include {
        phase: TEST
    }
    batch_norm_param {
        use_global_stats: true
        eps: 1e-5
    }
}
layer {
    name: "Conv4_1/expand/bn"
    type: "BatchNorm"
    bottom: "Conv4_1/expand"
    top: "Conv4_1/expand"
    include {
        phase: TRAIN
    }
    batch_norm_param {
        use_global_stats: false
        eps: 1e-5
    }
}
layer {
    name: "Conv4_1/expand/scale"
    type: "Scale"
    bottom: "Conv4_1/expand"
    top: "Conv4_1/expand"
    param {
        lr_mult: 1
        decay_mult: 0
    }
    param {
        lr_mult: 1
        decay_mult: 0
    }
    scale_param {
        bias_term: true
    }
}
layer {
    name: "Conv4_1/expand/relu"
    type: "ReLU"
    bottom: "Conv4_1/expand"
    top: "Conv4_1/expand"
}
layer {
    name: "Conv4_1/depthwise"
    type: "Convolution"
    bottom: "Conv4_1/expand"
    top: "Conv4_1/depthwise"
    param {
        lr_mult: 1.0
        decay_mult: 1.0
    }
    convolution_param {
        num_output: 144
        bias_term: false
        pad: 1
        kernel_size: 3
        group: 144
        stride: 2
        weight_filler {
            type: "msra"
        }
        engine: CAFFE
    }
}
layer {
    name: "Conv4_1/depthwise/bn"
    type: "BatchNorm"
    bottom: "Conv4_1/depthwise"
    top: "Conv4_1/depthwise"
    include {
        phase: TEST
    }
    batch_norm_param {
        use_global_stats: true
        eps: 1e-5
    }
}
layer {
    name: "Conv4_1/depthwise/bn"
    type: "BatchNorm"
    bottom: "Conv4_1/depthwise"
    top: "Conv4_1/depthwise"
    include {
        phase: TRAIN
    }
    batch_norm_param {
        use_global_stats: false
        eps: 1e-5
    }
}
layer {
    name: "Conv4_1/depthwise/scale"
    type: "Scale"
    bottom: "Conv4_1/depthwise"
    top: "Conv4_1/depthwise"
    param {
        lr_mult: 1
        decay_mult: 0
    }
    param {
        lr_mult: 1
        decay_mult: 0
    }
    scale_param {
        bias_term: true
    }
}
layer {
    name: "Conv4_1/depthwise/relu"
    type: "ReLU"
    bottom: "Conv4_1/depthwise"
    top: "Conv4_1/depthwise"
}
layer {
    name: "Conv4_1/linear"
    type: "Convolution"
    bottom: "Conv4_1/depthwise"
    top: "Conv4_1/linear"
    param {
        lr_mult: 1.0
        decay_mult: 1.0
    }
    convolution_param {
        num_output: 32
        bias_term: false
        pad: 0
        kernel_size: 1
        stride: 1
        weight_filler {
          type: "msra"
        }
    }
}
layer {
    name: "Conv4_1/linear/bn"
    type: "BatchNorm"
    bottom: "Conv4_1/linear"
    top: "Conv4_1/linear"
    include {
        phase: TEST
    }
    batch_norm_param {
        use_global_stats: true
        eps: 1e-5
    }
}
layer {
    name: "Conv4_1/linear/bn"
    type: "BatchNorm"
    bottom: "Conv4_1/linear"
    top: "Conv4_1/linear"
    include {
        phase: TRAIN
    }
    batch_norm_param {
        use_global_stats: false
        eps: 1e-5
    }
}
layer {
    name: "Conv4_1/linear/scale"
    type: "Scale"
    bottom: "Conv4_1/linear"
    top: "Conv4_1/linear"
    scale_param {
        bias_term: true
    }
    param {
        lr_mult: 1
        decay_mult: 0
    }
    param {
        lr_mult: 1
        decay_mult: 0
    }
}

layer {
    name: "Conv4_2/expand"
    type: "Convolution"
    bottom: "Conv4_1/linear"
    top: "Conv4_2/expand"
    param {
        lr_mult: 1.0
        decay_mult: 1.0
    }
    convolution_param {
        num_output: 192
        bias_term: false
        pad: 0
        kernel_size: 1
        stride: 1
        weight_filler {
            type: "msra"
        }
    }
}
layer {
    name: "Conv4_2/expand/bn"
    type: "BatchNorm"
    bottom: "Conv4_2/expand"
    top: "Conv4_2/expand"
    include {
        phase: TEST
    }
    batch_norm_param {
        use_global_stats: true
        eps: 1e-5
    }
}
layer {
    name: "Conv4_2/expand/bn"
    type: "BatchNorm"
    bottom: "Conv4_2/expand"
    top: "Conv4_2/expand"
    include {
        phase: TRAIN
    }
    batch_norm_param {
        use_global_stats: false
        eps: 1e-5
    }
}
layer {
    name: "Conv4_2/expand/scale"
    type: "Scale"
    bottom: "Conv4_2/expand"
    top: "Conv4_2/expand"
    param {
        lr_mult: 1
        decay_mult: 0
    }
    param {
        lr_mult: 1
        decay_mult: 0
    }
    scale_param {
        bias_term: true
    }
}
layer {
    name: "Conv4_2/expand/relu"
    type: "ReLU"
    bottom: "Conv4_2/expand"
    top: "Conv4_2/expand"
}
layer {
    name: "Conv4_2/depthwise"
    type: "Convolution"
    bottom: "Conv4_2/expand"
    top: "Conv4_2/depthwise"
    param {
        lr_mult: 1.0
        decay_mult: 1.0
    }
    convolution_param {
        num_output: 192
        bias_term: false
        pad: 1
        kernel_size: 3
        group: 192
        stride: 1
        weight_filler {
            type: "msra"
        }
        engine: CAFFE
    }
}
layer {
    name: "Conv4_2/depthwise/bn"
    type: "BatchNorm"
    bottom: "Conv4_2/depthwise"
    top: "Conv4_2/depthwise"
    include {
        phase: TEST
    }
    batch_norm_param {
        use_global_stats: true
        eps: 1e-5
    }
}
layer {
    name: "Conv4_2/depthwise/bn"
    type: "BatchNorm"
    bottom: "Conv4_2/depthwise"
    top: "Conv4_2/depthwise"
    include {
        phase: TRAIN
    }
    batch_norm_param {
        use_global_stats: false
        eps: 1e-5
    }
}
layer {
    name: "Conv4_2/depthwise/scale"
    type: "Scale"
    bottom: "Conv4_2/depthwise"
    top: "Conv4_2/depthwise"
    param {
        lr_mult: 1
        decay_mult: 0
    }
    param {
        lr_mult: 1
        decay_mult: 0
    }
    scale_param {
        bias_term: true
    }
}
layer {
    name: "Conv4_2/depthwise/relu"
    type: "ReLU"
    bottom: "Conv4_2/depthwise"
    top: "Conv4_2/depthwise"
}
layer {
    name: "Conv4_2/linear"
    type: "Convolution"
    bottom: "Conv4_2/depthwise"
    top: "Conv4_2/linear"
    param {
        lr_mult: 1.0
        decay_mult: 1.0
    }
    convolution_param {
        num_output: 32
        bias_term: false
        pad: 0
        kernel_size: 1
        stride: 1
        weight_filler {
          type: "msra"
        }
    }
}
layer {
    name: "Conv4_2/linear/bn"
    type: "BatchNorm"
    bottom: "Conv4_2/linear"
    top: "Conv4_2/linear"
    include {
        phase: TEST
    }
    batch_norm_param {
        use_global_stats: true
        eps: 1e-5
    }
}
layer {
    name: "Conv4_2/linear/bn"
    type: "BatchNorm"
    bottom: "Conv4_2/linear"
    top: "Conv4_2/linear"
    include {
        phase: TRAIN
    }
    batch_norm_param {
        use_global_stats: false
        eps: 1e-5
    }
}
layer {
    name: "Conv4_2/linear/scale"
    type: "Scale"
    bottom: "Conv4_2/linear"
    top: "Conv4_2/linear"
    scale_param {
        bias_term: true
    }
    param {
        lr_mult: 1
        decay_mult: 0
    }
    param {
        lr_mult: 1
        decay_mult: 0
    }
}
layer{
    name: "Block_4_2"
    type: "Eltwise"
    bottom: "Conv4_1/linear"
    bottom: "Conv4_2/linear"
    top: "Block_4_2"
}
layer {
    name: "Conv4_3/expand"
    type: "Convolution"
    bottom: "Block_4_2"
    top: "Conv4_3/expand"
    param {
        lr_mult: 1.0
        decay_mult: 1.0
    }
    convolution_param {
        num_output: 192
        bias_term: false
        pad: 0
        kernel_size: 1
        stride: 1
        weight_filler {
            type: "msra"
        }
    }
}
layer {
    name: "Conv4_3/expand/bn"
    type: "BatchNorm"
    bottom: "Conv4_3/expand"
    top: "Conv4_3/expand"
    include {
        phase: TEST
    }
    batch_norm_param {
        use_global_stats: true
        eps: 1e-5
    }
}
layer {
    name: "Conv4_3/expand/bn"
    type: "BatchNorm"
    bottom: "Conv4_3/expand"
    top: "Conv4_3/expand"
    include {
        phase: TRAIN
    }
    batch_norm_param {
        use_global_stats: false
        eps: 1e-5
    }
}
layer {
    name: "Conv4_3/expand/scale"
    type: "Scale"
    bottom: "Conv4_3/expand"
    top: "Conv4_3/expand"
    param {
        lr_mult: 1
        decay_mult: 0
    }
    param {
        lr_mult: 1
        decay_mult: 0
    }
    scale_param {
        bias_term: true
    }
}
layer {
    name: "Conv4_3/expand/relu"
    type: "ReLU"
    bottom: "Conv4_3/expand"
    top: "Conv4_3/expand"
}
layer {
    name: "Conv4_3/depthwise"
    type: "Convolution"
    bottom: "Conv4_3/expand"
    top: "Conv4_3/depthwise"
    param {
        lr_mult: 1.0
        decay_mult: 1.0
    }
    convolution_param {
        num_output: 192
        bias_term: false
        pad: 1
        kernel_size: 3
        group: 192
        stride: 1
        weight_filler {
            type: "msra"
        }
        engine: CAFFE
    }
}
layer {
    name: "Conv4_3/depthwise/bn"
    type: "BatchNorm"
    bottom: "Conv4_3/depthwise"
    top: "Conv4_3/depthwise"
    include {
        phase: TEST
    }
    batch_norm_param {
        use_global_stats: true
        eps: 1e-5
    }
}
layer {
    name: "Conv4_3/depthwise/bn"
    type: "BatchNorm"
    bottom: "Conv4_3/depthwise"
    top: "Conv4_3/depthwise"
    include {
        phase: TRAIN
    }
    batch_norm_param {
        use_global_stats: false
        eps: 1e-5
    }
}
layer {
    name: "Conv4_3/depthwise/scale"
    type: "Scale"
    bottom: "Conv4_3/depthwise"
    top: "Conv4_3/depthwise"
    param {
        lr_mult: 1
        decay_mult: 0
    }
    param {
        lr_mult: 1
        decay_mult: 0
    }
    scale_param {
        bias_term: true
    }
}
layer {
    name: "Conv4_3/depthwise/relu"
    type: "ReLU"
    bottom: "Conv4_3/depthwise"
    top: "Conv4_3/depthwise"
}
layer {
    name: "Conv4_3/linear"
    type: "Convolution"
    bottom: "Conv4_3/depthwise"
    top: "Conv4_3/linear"
    param {
        lr_mult: 1.0
        decay_mult: 1.0
    }
    convolution_param {
        num_output: 32
        bias_term: false
        pad: 0
        kernel_size: 1
        stride: 1
        weight_filler {
          type: "msra"
        }
    }
}
layer {
    name: "Conv4_3/linear/bn"
    type: "BatchNorm"
    bottom: "Conv4_3/linear"
    top: "Conv4_3/linear"
    include {
        phase: TEST
    }
    batch_norm_param {
        use_global_stats: true
        eps: 1e-5
    }
}
layer {
    name: "Conv4_3/linear/bn"
    type: "BatchNorm"
    bottom: "Conv4_3/linear"
    top: "Conv4_3/linear"
    include {
        phase: TRAIN
    }
    batch_norm_param {
        use_global_stats: false
        eps: 1e-5
    }
}
layer {
    name: "Conv4_3/linear/scale"
    type: "Scale"
    bottom: "Conv4_3/linear"
    top: "Conv4_3/linear"
    scale_param {
        bias_term: true
    }
    param {
        lr_mult: 1
        decay_mult: 0
    }
    param {
        lr_mult: 1
        decay_mult: 0
    }
}
layer{
    name: "Block_4_3"
    type: "Eltwise"
    bottom: "Block_4_2"
    bottom: "Conv4_3/linear"
    top: "Block_4_3"
}
######conv5, bottlenecks, repeat 4 times #########
layer {
    name: "Conv5_1/expand"
    type: "Convolution"
    bottom: "Block_4_3"
    top: "Conv5_1/expand"
    param {
        lr_mult: 1.0
        decay_mult: 1.0
    }
    convolution_param {
        num_output: 192
        bias_term: false
        pad: 0
        kernel_size: 1
        stride: 1
        weight_filler {
            type: "msra"
        }
    }
}
layer {
    name: "Conv5_1/expand/bn"
    type: "BatchNorm"
    bottom: "Conv5_1/expand"
    top: "Conv5_1/expand"
    include {
        phase: TEST
    }
    batch_norm_param {
        use_global_stats: true
        eps: 1e-5
    }
}
layer {
    name: "Conv5_1/expand/bn"
    type: "BatchNorm"
    bottom: "Conv5_1/expand"
    top: "Conv5_1/expand"
    include {
        phase: TRAIN
    }
    batch_norm_param {
        use_global_stats: false
        eps: 1e-5
    }
}
layer {
    name: "Conv5_1/expand/scale"
    type: "Scale"
    bottom: "Conv5_1/expand"
    top: "Conv5_1/expand"
    param {
        lr_mult: 1
        decay_mult: 0
    }
    param {
        lr_mult: 1
        decay_mult: 0
    }
    scale_param {
        bias_term: true
    }
}
layer {
    name: "Conv5_1/expand/relu"
    type: "ReLU"
    bottom: "Conv5_1/expand"
    top: "Conv5_1/expand"
}
layer {
    name: "Conv5_1/depthwise"
    type: "Convolution"
    bottom: "Conv5_1/expand"
    top: "Conv5_1/depthwise"
    param {
        lr_mult: 1.0
        decay_mult: 1.0
    }
    convolution_param {
        num_output: 192
        bias_term: false
        pad: 1
        kernel_size: 3
        group: 192
        stride: 2
        weight_filler {
            type: "msra"
        }
        engine: CAFFE
    }
}
layer {
    name: "Conv5_1/depthwise/bn"
    type: "BatchNorm"
    bottom: "Conv5_1/depthwise"
    top: "Conv5_1/depthwise"
    include {
        phase: TEST
    }
    batch_norm_param {
        use_global_stats: true
        eps: 1e-5
    }
}
layer {
    name: "Conv5_1/depthwise/bn"
    type: "BatchNorm"
    bottom: "Conv5_1/depthwise"
    top: "Conv5_1/depthwise"
    include {
        phase: TRAIN
    }
    batch_norm_param {
        use_global_stats: false
        eps: 1e-5
    }
}
layer {
    name: "Conv5_1/depthwise/scale"
    type: "Scale"
    bottom: "Conv5_1/depthwise"
    top: "Conv5_1/depthwise"
    param {
        lr_mult: 1
        decay_mult: 0
    }
    param {
        lr_mult: 1
        decay_mult: 0
    }
    scale_param {
        bias_term: true
    }
}
layer {
    name: "Conv5_1/depthwise/relu"
    type: "ReLU"
    bottom: "Conv5_1/depthwise"
    top: "Conv5_1/depthwise"
}
layer {
    name: "Conv5_1/linear"
    type: "Convolution"
    bottom: "Conv5_1/depthwise"
    top: "Conv5_1/linear"
    param {
        lr_mult: 1.0
        decay_mult: 1.0
    }
    convolution_param {
        num_output: 64
        bias_term: false
        pad: 0
        kernel_size: 1
        stride: 1
        weight_filler {
          type: "msra"
        }
    }
}
layer {
    name: "Conv5_1/linear/bn"
    type: "BatchNorm"
    bottom: "Conv5_1/linear"
    top: "Conv5_1/linear"
    include {
        phase: TEST
    }
    batch_norm_param {
        use_global_stats: true
        eps: 1e-5
    }
}
layer {
    name: "Conv5_1/linear/bn"
    type: "BatchNorm"
    bottom: "Conv5_1/linear"
    top: "Conv5_1/linear"
    include {
        phase: TRAIN
    }
    batch_norm_param {
        use_global_stats: false
        eps: 1e-5
    }
}
layer {
    name: "Conv5_1/linear/scale"
    type: "Scale"
    bottom: "Conv5_1/linear"
    top: "Conv5_1/linear"
    scale_param {
        bias_term: true
    }
    param {
        lr_mult: 1
        decay_mult: 0
    }
    param {
        lr_mult: 1
        decay_mult: 0
    }
}

layer {
    name: "Conv5_2/expand"
    type: "Convolution"
    bottom: "Conv5_1/linear"
    top: "Conv5_2/expand"
    param {
        lr_mult: 1.0
        decay_mult: 1.0
    }
    convolution_param {
        num_output: 384
        bias_term: false
        pad: 0
        kernel_size: 1
        stride: 1
        weight_filler {
            type: "msra"
        }
    }
}
layer {
    name: "Conv5_2/expand/bn"
    type: "BatchNorm"
    bottom: "Conv5_2/expand"
    top: "Conv5_2/expand"
    include {
        phase: TEST
    }
    batch_norm_param {
        use_global_stats: true
        eps: 1e-5
    }
}
layer {
    name: "Conv5_2/expand/bn"
    type: "BatchNorm"
    bottom: "Conv5_2/expand"
    top: "Conv5_2/expand"
    include {
        phase: TRAIN
    }
    batch_norm_param {
        use_global_stats: false
        eps: 1e-5
    }
}
layer {
    name: "Conv5_2/expand/scale"
    type: "Scale"
    bottom: "Conv5_2/expand"
    top: "Conv5_2/expand"
    param {
        lr_mult: 1
        decay_mult: 0
    }
    param {
        lr_mult: 1
        decay_mult: 0
    }
    scale_param {
        bias_term: true
    }
}
layer {
    name: "Conv5_2/expand/relu"
    type: "ReLU"
    bottom: "Conv5_2/expand"
    top: "Conv5_2/expand"
}
layer {
    name: "Conv5_2/depthwise"
    type: "Convolution"
    bottom: "Conv5_2/expand"
    top: "Conv5_2/depthwise"
    param {
        lr_mult: 1.0
        decay_mult: 1.0
    }
    convolution_param {
        num_output: 384
        bias_term: false
        pad: 1
        kernel_size: 3
        group: 384
        stride: 1
        weight_filler {
            type: "msra"
        }
        engine: CAFFE
    }
}
layer {
    name: "Conv5_2/depthwise/bn"
    type: "BatchNorm"
    bottom: "Conv5_2/depthwise"
    top: "Conv5_2/depthwise"
    include {
        phase: TEST
    }
    batch_norm_param {
        use_global_stats: true
        eps: 1e-5
    }
}
layer {
    name: "Conv5_2/depthwise/bn"
    type: "BatchNorm"
    bottom: "Conv5_2/depthwise"
    top: "Conv5_2/depthwise"
    include {
        phase: TRAIN
    }
    batch_norm_param {
        use_global_stats: false
        eps: 1e-5
    }
}
layer {
    name: "Conv5_2/depthwise/scale"
    type: "Scale"
    bottom: "Conv5_2/depthwise"
    top: "Conv5_2/depthwise"
    param {
        lr_mult: 1
        decay_mult: 0
    }
    param {
        lr_mult: 1
        decay_mult: 0
    }
    scale_param {
        bias_term: true
    }
}
layer {
    name: "Conv5_2/depthwise/relu"
    type: "ReLU"
    bottom: "Conv5_2/depthwise"
    top: "Conv5_2/depthwise"
}
layer {
    name: "Conv5_2/linear"
    type: "Convolution"
    bottom: "Conv5_2/depthwise"
    top: "Conv5_2/linear"
    param {
        lr_mult: 1.0
        decay_mult: 1.0
    }
    convolution_param {
        num_output: 64
        bias_term: false
        pad: 0
        kernel_size: 1
        stride: 1
        weight_filler {
          type: "msra"
        }
    }
}
layer {
    name: "Conv5_2/linear/bn"
    type: "BatchNorm"
    bottom: "Conv5_2/linear"
    top: "Conv5_2/linear"
    include {
        phase: TEST
    }
    batch_norm_param {
        use_global_stats: true
        eps: 1e-5
    }
}
layer {
    name: "Conv5_2/linear/bn"
    type: "BatchNorm"
    bottom: "Conv5_2/linear"
    top: "Conv5_2/linear"
    include {
        phase: TRAIN
    }
    batch_norm_param {
        use_global_stats: false
        eps: 1e-5
    }
}
layer {
    name: "Conv5_2/linear/scale"
    type: "Scale"
    bottom: "Conv5_2/linear"
    top: "Conv5_2/linear"
    scale_param {
        bias_term: true
    }
    param {
        lr_mult: 1
        decay_mult: 0
    }
    param {
        lr_mult: 1
        decay_mult: 0
    }
}
layer{
    name: "Block_5_2"
    type: "Eltwise"
    bottom: "Conv5_1/linear"
    bottom: "Conv5_2/linear"
    top: "Block_5_2"
}
layer {
    name: "Conv5_3/expand"
    type: "Convolution"
    bottom: "Block_5_2"
    top: "Conv5_3/expand"
    param {
        lr_mult: 1.0
        decay_mult: 1.0
    }
    convolution_param {
        num_output: 384
        bias_term: false
        pad: 0
        kernel_size: 1
        stride: 1
        weight_filler {
            type: "msra"
        }
    }
}
layer {
    name: "Conv5_3/expand/bn"
    type: "BatchNorm"
    bottom: "Conv5_3/expand"
    top: "Conv5_3/expand"
    include {
        phase: TEST
    }
    batch_norm_param {
        use_global_stats: true
        eps: 1e-5
    }
}
layer {
    name: "Conv5_3/expand/bn"
    type: "BatchNorm"
    bottom: "Conv5_3/expand"
    top: "Conv5_3/expand"
    include {
        phase: TRAIN
    }
    batch_norm_param {
        use_global_stats: false
        eps: 1e-5
    }
}
layer {
    name: "Conv5_3/expand/scale"
    type: "Scale"
    bottom: "Conv5_3/expand"
    top: "Conv5_3/expand"
    param {
        lr_mult: 1
        decay_mult: 0
    }
    param {
        lr_mult: 1
        decay_mult: 0
    }
    scale_param {
        bias_term: true
    }
}
layer {
    name: "Conv5_3/expand/relu"
    type: "ReLU"
    bottom: "Conv5_3/expand"
    top: "Conv5_3/expand"
}
layer {
    name: "Conv5_3/depthwise"
    type: "Convolution"
    bottom: "Conv5_3/expand"
    top: "Conv5_3/depthwise"
    param {
        lr_mult: 1.0
        decay_mult: 1.0
    }
    convolution_param {
        num_output: 384
        bias_term: false
        pad: 1
        kernel_size: 3
        group: 384
        stride: 1
        weight_filler {
            type: "msra"
        }
        engine: CAFFE
    }
}
layer {
    name: "Conv5_3/depthwise/bn"
    type: "BatchNorm"
    bottom: "Conv5_3/depthwise"
    top: "Conv5_3/depthwise"
    include {
        phase: TEST
    }
    batch_norm_param {
        use_global_stats: true
        eps: 1e-5
    }
}
layer {
    name: "Conv5_3/depthwise/bn"
    type: "BatchNorm"
    bottom: "Conv5_3/depthwise"
    top: "Conv5_3/depthwise"
    include {
        phase: TRAIN
    }
    batch_norm_param {
        use_global_stats: false
        eps: 1e-5
    }
}
layer {
    name: "Conv5_3/depthwise/scale"
    type: "Scale"
    bottom: "Conv5_3/depthwise"
    top: "Conv5_3/depthwise"
    param {
        lr_mult: 1
        decay_mult: 0
    }
    param {
        lr_mult: 1
        decay_mult: 0
    }
    scale_param {
        bias_term: true
    }
}
layer {
    name: "Conv5_3/depthwise/relu"
    type: "ReLU"
    bottom: "Conv5_3/depthwise"
    top: "Conv5_3/depthwise"
}
layer {
    name: "Conv5_3/linear"
    type: "Convolution"
    bottom: "Conv5_3/depthwise"
    top: "Conv5_3/linear"
    param {
        lr_mult: 1.0
        decay_mult: 1.0
    }
    convolution_param {
        num_output: 64
        bias_term: false
        pad: 0
        kernel_size: 1
        stride: 1
        weight_filler {
          type: "msra"
        }
    }
}
layer {
    name: "Conv5_3/linear/bn"
    type: "BatchNorm"
    bottom: "Conv5_3/linear"
    top: "Conv5_3/linear"
    include {
        phase: TEST
    }
    batch_norm_param {
        use_global_stats: true
        eps: 1e-5
    }
}
layer {
    name: "Conv5_3/linear/bn"
    type: "BatchNorm"
    bottom: "Conv5_3/linear"
    top: "Conv5_3/linear"
    include {
        phase: TRAIN
    }
    batch_norm_param {
        use_global_stats: false
        eps: 1e-5
    }
}
layer {
    name: "Conv5_3/linear/scale"
    type: "Scale"
    bottom: "Conv5_3/linear"
    top: "Conv5_3/linear"
    scale_param {
        bias_term: true
    }
    param {
        lr_mult: 1
        decay_mult: 0
    }
    param {
        lr_mult: 1
        decay_mult: 0
    }
}
layer{
    name: "Block_5_3"
    type: "Eltwise"
    bottom: "Block_5_2"
    bottom: "Conv5_3/linear"
    top: "Block_5_3"
}
layer {
    name: "Conv5_4/expand"
    type: "Convolution"
    bottom: "Block_5_3"
    top: "Conv5_4/expand"
    param {
        lr_mult: 1.0
        decay_mult: 1.0
    }
    convolution_param {
        num_output: 384
        bias_term: false
        pad: 0
        kernel_size: 1
        stride: 1
        weight_filler {
            type: "msra"
        }
    }
}
layer {
    name: "Conv5_4/expand/bn"
    type: "BatchNorm"
    bottom: "Conv5_4/expand"
    top: "Conv5_4/expand"
    include {
        phase: TEST
    }
    batch_norm_param {
        use_global_stats: true
        eps: 1e-5
    }
}
layer {
    name: "Conv5_4/expand/bn"
    type: "BatchNorm"
    bottom: "Conv5_4/expand"
    top: "Conv5_4/expand"
    include {
        phase: TRAIN
    }
    batch_norm_param {
        use_global_stats: false
        eps: 1e-5
    }
}
layer {
    name: "Conv5_4/expand/scale"
    type: "Scale"
    bottom: "Conv5_4/expand"
    top: "Conv5_4/expand"
    param {
        lr_mult: 1
        decay_mult: 0
    }
    param {
        lr_mult: 1
        decay_mult: 0
    }
    scale_param {
        bias_term: true
    }
}
layer {
    name: "Conv5_4/expand/relu"
    type: "ReLU"
    bottom: "Conv5_4/expand"
    top: "Conv5_4/expand"
}
layer {
    name: "Conv5_4/depthwise"
    type: "Convolution"
    bottom: "Conv5_4/expand"
    top: "Conv5_4/depthwise"
    param {
        lr_mult: 1.0
        decay_mult: 1.0
    }
    convolution_param {
        num_output: 384
        bias_term: false
        pad: 1
        kernel_size: 3
        group: 384
        stride: 1
        weight_filler {
            type: "msra"
        }
        engine: CAFFE
    }
}
layer {
    name: "Conv5_4/depthwise/bn"
    type: "BatchNorm"
    bottom: "Conv5_4/depthwise"
    top: "Conv5_4/depthwise"
    include {
        phase: TEST
    }
    batch_norm_param {
        use_global_stats: true
        eps: 1e-5
    }
}
layer {
    name: "Conv5_4/depthwise/bn"
    type: "BatchNorm"
    bottom: "Conv5_4/depthwise"
    top: "Conv5_4/depthwise"
    include {
        phase: TRAIN
    }
    batch_norm_param {
        use_global_stats: false
        eps: 1e-5
    }
}
layer {
    name: "Conv5_4/depthwise/scale"
    type: "Scale"
    bottom: "Conv5_4/depthwise"
    top: "Conv5_4/depthwise"
    param {
        lr_mult: 1
        decay_mult: 0
    }
    param {
        lr_mult: 1
        decay_mult: 0
    }
    scale_param {
        bias_term: true
    }
}
layer {
    name: "Conv5_4/depthwise/relu"
    type: "ReLU"
    bottom: "Conv5_4/depthwise"
    top: "Conv5_4/depthwise"
}
layer {
    name: "Conv5_4/linear"
    type: "Convolution"
    bottom: "Conv5_4/depthwise"
    top: "Conv5_4/linear"
    param {
        lr_mult: 1.0
        decay_mult: 1.0
    }
    convolution_param {
        num_output: 64
        bias_term: false
        pad: 0
        kernel_size: 1
        stride: 1
        weight_filler {
          type: "msra"
        }
    }
}
layer {
    name: "Conv5_4/linear/bn"
    type: "BatchNorm"
    bottom: "Conv5_4/linear"
    top: "Conv5_4/linear"
    include {
        phase: TEST
    }
    batch_norm_param {
        use_global_stats: true
        eps: 1e-5
    }
}
layer {
    name: "Conv5_4/linear/bn"
    type: "BatchNorm"
    bottom: "Conv5_4/linear"
    top: "Conv5_4/linear"
    include {
        phase: TRAIN
    }
    batch_norm_param {
        use_global_stats: false
        eps: 1e-5
    }
}
layer {
    name: "Conv5_4/linear/scale"
    type: "Scale"
    bottom: "Conv5_4/linear"
    top: "Conv5_4/linear"
    scale_param {
        bias_term: true
    }
    param {
        lr_mult: 1
        decay_mult: 0
    }
    param {
        lr_mult: 1
        decay_mult: 0
    }
}
layer{
    name: "Block_5_4"
    type: "Eltwise"
    bottom: "Block_5_3"
    bottom: "Conv5_4/linear"
    top: "Block_5_4"
}
#####conv6, bottlenecks, repeat 3 times####
layer {
    name: "Conv6_1/expand"
    type: "Convolution"
    bottom: "Block_5_4"
    top: "Conv6_1/expand"
    param {
        lr_mult: 1.0
        decay_mult: 1.0
    }
    convolution_param {
        num_output: 384
        bias_term: false
        pad: 0
        kernel_size: 1
        stride: 1
        weight_filler {
            type: "msra"
        }
    }
}
layer {
    name: "Conv6_1/expand/bn"
    type: "BatchNorm"
    bottom: "Conv6_1/expand"
    top: "Conv6_1/expand"
    include {
        phase: TEST
    }
    batch_norm_param {
        use_global_stats: true
        eps: 1e-5
    }
}
layer {
    name: "Conv6_1/expand/bn"
    type: "BatchNorm"
    bottom: "Conv6_1/expand"
    top: "Conv6_1/expand"
    include {
        phase: TRAIN
    }
    batch_norm_param {
        use_global_stats: false
        eps: 1e-5
    }
}
layer {
    name: "Conv6_1/expand/scale"
    type: "Scale"
    bottom: "Conv6_1/expand"
    top: "Conv6_1/expand"
    param {
        lr_mult: 1
        decay_mult: 0
    }
    param {
        lr_mult: 1
        decay_mult: 0
    }
    scale_param {
        bias_term: true
    }
}
layer {
    name: "Conv6_1/expand/relu"
    type: "ReLU"
    bottom: "Conv6_1/expand"
    top: "Conv6_1/expand"
}
layer {
    name: "Conv6_1/depthwise"
    type: "Convolution"
    bottom: "Conv6_1/expand"
    top: "Conv6_1/depthwise"
    param {
        lr_mult: 1.0
        decay_mult: 1.0
    }
    convolution_param {
        num_output: 384
        bias_term: false
        pad: 1
        kernel_size: 3
        group: 384
        stride: 2
        weight_filler {
            type: "msra"
        }
        engine: CAFFE
    }
}
layer {
    name: "Conv6_1/depthwise/bn"
    type: "BatchNorm"
    bottom: "Conv6_1/depthwise"
    top: "Conv6_1/depthwise"
    include {
        phase: TEST
    }
    batch_norm_param {
        use_global_stats: true
        eps: 1e-5
    }
}
layer {
    name: "Conv6_1/depthwise/bn"
    type: "BatchNorm"
    bottom: "Conv6_1/depthwise"
    top: "Conv6_1/depthwise"
    include {
        phase: TRAIN
    }
    batch_norm_param {
        use_global_stats: false
        eps: 1e-5
    }
}
layer {
    name: "Conv6_1/depthwise/scale"
    type: "Scale"
    bottom: "Conv6_1/depthwise"
    top: "Conv6_1/depthwise"
    param {
        lr_mult: 1
        decay_mult: 0
    }
    param {
        lr_mult: 1
        decay_mult: 0
    }
    scale_param {
        bias_term: true
    }
}
layer {
    name: "Conv6_1/depthwise/relu"
    type: "ReLU"
    bottom: "Conv6_1/depthwise"
    top: "Conv6_1/depthwise"
}
layer {
    name: "Conv6_1/linear"
    type: "Convolution"
    bottom: "Conv6_1/depthwise"
    top: "Conv6_1/linear"
    param {
        lr_mult: 1.0
        decay_mult: 1.0
    }
    convolution_param {
        num_output: 96
        bias_term: false
        pad: 0
        kernel_size: 1
        stride: 1
        weight_filler {
          type: "msra"
        }
    }
}
layer {
    name: "Conv6_1/linear/bn"
    type: "BatchNorm"
    bottom: "Conv6_1/linear"
    top: "Conv6_1/linear"
    include {
        phase: TEST
    }
    batch_norm_param {
        use_global_stats: true
        eps: 1e-5
    }
}
layer {
    name: "Conv6_1/linear/bn"
    type: "BatchNorm"
    bottom: "Conv6_1/linear"
    top: "Conv6_1/linear"
    include {
        phase: TRAIN
    }
    batch_norm_param {
        use_global_stats: false
        eps: 1e-5
    }
}
layer {
    name: "Conv6_1/linear/scale"
    type: "Scale"
    bottom: "Conv6_1/linear"
    top: "Conv6_1/linear"
    scale_param {
        bias_term: true
    }
    param {
        lr_mult: 1
        decay_mult: 0
    }
    param {
        lr_mult: 1
        decay_mult: 0
    }
}

layer {
    name: "Conv6_2/expand"
    type: "Convolution"
    bottom: "Conv6_1/linear"
    top: "Conv6_2/expand"
    param {
        lr_mult: 1.0
        decay_mult: 1.0
    }
    convolution_param {
        num_output: 576
        bias_term: false
        pad: 0
        kernel_size: 1
        stride: 1
        weight_filler {
            type: "msra"
        }
    }
}
layer {
    name: "Conv6_2/expand/bn"
    type: "BatchNorm"
    bottom: "Conv6_2/expand"
    top: "Conv6_2/expand"
    include {
        phase: TEST
    }
    batch_norm_param {
        use_global_stats: true
        eps: 1e-5
    }
}
layer {
    name: "Conv6_2/expand/bn"
    type: "BatchNorm"
    bottom: "Conv6_2/expand"
    top: "Conv6_2/expand"
    include {
        phase: TRAIN
    }
    batch_norm_param {
        use_global_stats: false
        eps: 1e-5
    }
}
layer {
    name: "Conv6_2/expand/scale"
    type: "Scale"
    bottom: "Conv6_2/expand"
    top: "Conv6_2/expand"
    param {
        lr_mult: 1
        decay_mult: 0
    }
    param {
        lr_mult: 1
        decay_mult: 0
    }
    scale_param {
        bias_term: true
    }
}
layer {
    name: "Conv6_2/expand/relu"
    type: "ReLU"
    bottom: "Conv6_2/expand"
    top: "Conv6_2/expand"
}
layer {
    name: "Conv6_2/depthwise"
    type: "Convolution"
    bottom: "Conv6_2/expand"
    top: "Conv6_2/depthwise"
    param {
        lr_mult: 1.0
        decay_mult: 1.0
    }
    convolution_param {
        num_output: 576
        bias_term: false
        pad: 1
        kernel_size: 3
        group: 576
        stride: 1
        weight_filler {
            type: "msra"
        }
        engine: CAFFE
    }
}
layer {
    name: "Conv6_2/depthwise/bn"
    type: "BatchNorm"
    bottom: "Conv6_2/depthwise"
    top: "Conv6_2/depthwise"
    include {
        phase: TEST
    }
    batch_norm_param {
        use_global_stats: true
        eps: 1e-5
    }
}
layer {
    name: "Conv6_2/depthwise/bn"
    type: "BatchNorm"
    bottom: "Conv6_2/depthwise"
    top: "Conv6_2/depthwise"
    include {
        phase: TRAIN
    }
    batch_norm_param {
        use_global_stats: false
        eps: 1e-5
    }
}
layer {
    name: "Conv6_2/depthwise/scale"
    type: "Scale"
    bottom: "Conv6_2/depthwise"
    top: "Conv6_2/depthwise"
    param {
        lr_mult: 1
        decay_mult: 0
    }
    param {
        lr_mult: 1
        decay_mult: 0
    }
    scale_param {
        bias_term: true
    }
}
layer {
    name: "Conv6_2/depthwise/relu"
    type: "ReLU"
    bottom: "Conv6_2/depthwise"
    top: "Conv6_2/depthwise"
}
layer {
    name: "Conv6_2/linear"
    type: "Convolution"
    bottom: "Conv6_2/depthwise"
    top: "Conv6_2/linear"
    param {
        lr_mult: 1.0
        decay_mult: 1.0
    }
    convolution_param {
        num_output: 96
        bias_term: false
        pad: 0
        kernel_size: 1
        stride: 1
        weight_filler {
          type: "msra"
        }
    }
}
layer {
    name: "Conv6_2/linear/bn"
    type: "BatchNorm"
    bottom: "Conv6_2/linear"
    top: "Conv6_2/linear"
    include {
        phase: TEST
    }
    batch_norm_param {
        use_global_stats: true
        eps: 1e-5
    }
}
layer {
    name: "Conv6_2/linear/bn"
    type: "BatchNorm"
    bottom: "Conv6_2/linear"
    top: "Conv6_2/linear"
    include {
        phase: TRAIN
    }
    batch_norm_param {
        use_global_stats: false
        eps: 1e-5
    }
}
layer {
    name: "Conv6_2/linear/scale"
    type: "Scale"
    bottom: "Conv6_2/linear"
    top: "Conv6_2/linear"
    scale_param {
        bias_term: true
    }
    param {
        lr_mult: 1
        decay_mult: 0
    }
    param {
        lr_mult: 1
        decay_mult: 0
    }
}
layer{
    name: "Block_6_2"
    type: "Eltwise"
    bottom: "Conv6_1/linear"
    bottom: "Conv6_2/linear"
    top: "Block_6_2"
}
layer {
    name: "Conv6_3/expand"
    type: "Convolution"
    bottom: "Block_6_2"
    top: "Conv6_3/expand"
    param {
        lr_mult: 1.0
        decay_mult: 1.0
    }
    convolution_param {
        num_output: 576
        bias_term: false
        pad: 0
        kernel_size: 1
        stride: 1
        weight_filler {
            type: "msra"
        }
    }
}
layer {
    name: "Conv6_3/expand/bn"
    type: "BatchNorm"
    bottom: "Conv6_3/expand"
    top: "Conv6_3/expand"
    include {
        phase: TEST
    }
    batch_norm_param {
        use_global_stats: true
        eps: 1e-5
    }
}
layer {
    name: "Conv6_3/expand/bn"
    type: "BatchNorm"
    bottom: "Conv6_3/expand"
    top: "Conv6_3/expand"
    include {
        phase: TRAIN
    }
    batch_norm_param {
        use_global_stats: false
        eps: 1e-5
    }
}
layer {
    name: "Conv6_3/expand/scale"
    type: "Scale"
    bottom: "Conv6_3/expand"
    top: "Conv6_3/expand"
    param {
        lr_mult: 1
        decay_mult: 0
    }
    param {
        lr_mult: 1
        decay_mult: 0
    }
    scale_param {
        bias_term: true
    }
}
layer {
    name: "Conv6_3/expand/relu"
    type: "ReLU"
    bottom: "Conv6_3/expand"
    top: "Conv6_3/expand"
}
layer {
    name: "Conv6_3/depthwise"
    type: "Convolution"
    bottom: "Conv6_3/expand"
    top: "Conv6_3/depthwise"
    param {
        lr_mult: 1.0
        decay_mult: 1.0
    }
    convolution_param {
        num_output: 576
        bias_term: false
        pad: 1
        kernel_size: 3
        group: 576
        stride: 1
        weight_filler {
            type: "msra"
        }
        engine: CAFFE
    }
}
layer {
    name: "Conv6_3/depthwise/bn"
    type: "BatchNorm"
    bottom: "Conv6_3/depthwise"
    top: "Conv6_3/depthwise"
    include {
        phase: TEST
    }
    batch_norm_param {
        use_global_stats: true
        eps: 1e-5
    }
}
layer {
    name: "Conv6_3/depthwise/bn"
    type: "BatchNorm"
    bottom: "Conv6_3/depthwise"
    top: "Conv6_3/depthwise"
    include {
        phase: TRAIN
    }
    batch_norm_param {
        use_global_stats: false
        eps: 1e-5
    }
}
layer {
    name: "Conv6_3/depthwise/scale"
    type: "Scale"
    bottom: "Conv6_3/depthwise"
    top: "Conv6_3/depthwise"
    param {
        lr_mult: 1
        decay_mult: 0
    }
    param {
        lr_mult: 1
        decay_mult: 0
    }
    scale_param {
        bias_term: true
    }
}
layer {
    name: "Conv6_3/depthwise/relu"
    type: "ReLU"
    bottom: "Conv6_3/depthwise"
    top: "Conv6_3/depthwise"
}
layer {
    name: "Conv6_3/linear"
    type: "Convolution"
    bottom: "Conv6_3/depthwise"
    top: "Conv6_3/linear"
    param {
        lr_mult: 1.0
        decay_mult: 1.0
    }
    convolution_param {
        num_output: 96
        bias_term: false
        pad: 0
        kernel_size: 1
        stride: 1
        weight_filler {
          type: "msra"
        }
    }
}
layer {
    name: "Conv6_3/linear/bn"
    type: "BatchNorm"
    bottom: "Conv6_3/linear"
    top: "Conv6_3/linear"
    include {
        phase: TEST
    }
    batch_norm_param {
        use_global_stats: true
        eps: 1e-5
    }
}
layer {
    name: "Conv6_3/linear/bn"
    type: "BatchNorm"
    bottom: "Conv6_3/linear"
    top: "Conv6_3/linear"
    include {
        phase: TRAIN
    }
    batch_norm_param {
        use_global_stats: false
        eps: 1e-5
    }
}
layer {
    name: "Conv6_3/linear/scale"
    type: "Scale"
    bottom: "Conv6_3/linear"
    top: "Conv6_3/linear"
    scale_param {
        bias_term: true
    }
    param {
        lr_mult: 1
        decay_mult: 0
    }
    param {
        lr_mult: 1
        decay_mult: 0
    }
}
layer{
    name: "Block_6_3"
    type: "Eltwise"
    bottom: "Block_6_2"
    bottom: "Conv6_3/linear"
    top: "Block_6_3"
}
####conv7, bottlenecks, repeat 3 times ####
layer {
    name: "Conv7_1/expand"
    type: "Convolution"
    bottom: "Block_6_3"
    top: "Conv7_1/expand"
    param {
        lr_mult: 1.0
        decay_mult: 1.0
    }
    convolution_param {
        num_output: 576
        bias_term: false
        pad: 0
        kernel_size: 1
        stride: 1
        weight_filler {
            type: "msra"
        }
    }
}
layer {
    name: "Conv7_1/expand/bn"
    type: "BatchNorm"
    bottom: "Conv7_1/expand"
    top: "Conv7_1/expand"
    include {
        phase: TEST
    }
    batch_norm_param {
        use_global_stats: true
        eps: 1e-5
    }
}
layer {
    name: "Conv7_1/expand/bn"
    type: "BatchNorm"
    bottom: "Conv7_1/expand"
    top: "Conv7_1/expand"
    include {
        phase: TRAIN
    }
    batch_norm_param {
        use_global_stats: false
        eps: 1e-5
    }
}
layer {
    name: "Conv7_1/expand/scale"
    type: "Scale"
    bottom: "Conv7_1/expand"
    top: "Conv7_1/expand"
    param {
        lr_mult: 1
        decay_mult: 0
    }
    param {
        lr_mult: 1
        decay_mult: 0
    }
    scale_param {
        bias_term: true
    }
}
layer {
    name: "Conv7_1/expand/relu"
    type: "ReLU"
    bottom: "Conv7_1/expand"
    top: "Conv7_1/expand"
}
layer {
    name: "Conv7_1/depthwise"
    type: "Convolution"
    bottom: "Conv7_1/expand"
    top: "Conv7_1/depthwise"
    param {
        lr_mult: 1.0
        decay_mult: 1.0
    }
    convolution_param {
        num_output: 576
        bias_term: false
        pad: 1
        kernel_size: 3
        group: 576
        stride: 2
        weight_filler {
            type: "msra"
        }
        engine: CAFFE
    }
}
layer {
    name: "Conv7_1/depthwise/bn"
    type: "BatchNorm"
    bottom: "Conv7_1/depthwise"
    top: "Conv7_1/depthwise"
    include {
        phase: TEST
    }
    batch_norm_param {
        use_global_stats: true
        eps: 1e-5
    }
}
layer {
    name: "Conv7_1/depthwise/bn"
    type: "BatchNorm"
    bottom: "Conv7_1/depthwise"
    top: "Conv7_1/depthwise"
    include {
        phase: TRAIN
    }
    batch_norm_param {
        use_global_stats: false
        eps: 1e-5
    }
}
layer {
    name: "Conv7_1/depthwise/scale"
    type: "Scale"
    bottom: "Conv7_1/depthwise"
    top: "Conv7_1/depthwise"
    param {
        lr_mult: 1
        decay_mult: 0
    }
    param {
        lr_mult: 1
        decay_mult: 0
    }
    scale_param {
        bias_term: true
    }
}
layer {
    name: "Conv7_1/depthwise/relu"
    type: "ReLU"
    bottom: "Conv7_1/depthwise"
    top: "Conv7_1/depthwise"
}
layer {
    name: "Conv7_1/linear"
    type: "Convolution"
    bottom: "Conv7_1/depthwise"
    top: "Conv7_1/linear"
    param {
        lr_mult: 1.0
        decay_mult: 1.0
    }
    convolution_param {
        num_output: 160
        bias_term: false
        pad: 0
        kernel_size: 1
        stride: 1
        weight_filler {
          type: "msra"
        }
    }
}
layer {
    name: "Conv7_1/linear/bn"
    type: "BatchNorm"
    bottom: "Conv7_1/linear"
    top: "Conv7_1/linear"
    include {
        phase: TEST
    }
    batch_norm_param {
        use_global_stats: true
        eps: 1e-5
    }
}
layer {
    name: "Conv7_1/linear/bn"
    type: "BatchNorm"
    bottom: "Conv7_1/linear"
    top: "Conv7_1/linear"
    include {
        phase: TRAIN
    }
    batch_norm_param {
        use_global_stats: false
        eps: 1e-5
    }
}
layer {
    name: "Conv7_1/linear/scale"
    type: "Scale"
    bottom: "Conv7_1/linear"
    top: "Conv7_1/linear"
    scale_param {
        bias_term: true
    }
    param {
        lr_mult: 1
        decay_mult: 0
    }
    param {
        lr_mult: 1
        decay_mult: 0
    }
}

layer {
    name: "Conv7_2/expand"
    type: "Convolution"
    bottom: "Conv7_1/linear"
    top: "Conv7_2/expand"
    param {
        lr_mult: 1.0
        decay_mult: 1.0
    }
    convolution_param {
        num_output: 960
        bias_term: false
        pad: 0
        kernel_size: 1
        stride: 1
        weight_filler {
            type: "msra"
        }
    }
}
layer {
    name: "Conv7_2/expand/bn"
    type: "BatchNorm"
    bottom: "Conv7_2/expand"
    top: "Conv7_2/expand"
    include {
        phase: TEST
    }
    batch_norm_param {
        use_global_stats: true
        eps: 1e-5
    }
}
layer {
    name: "Conv7_2/expand/bn"
    type: "BatchNorm"
    bottom: "Conv7_2/expand"
    top: "Conv7_2/expand"
    include {
        phase: TRAIN
    }
    batch_norm_param {
        use_global_stats: false
        eps: 1e-5
    }
}
layer {
    name: "Conv7_2/expand/scale"
    type: "Scale"
    bottom: "Conv7_2/expand"
    top: "Conv7_2/expand"
    param {
        lr_mult: 1
        decay_mult: 0
    }
    param {
        lr_mult: 1
        decay_mult: 0
    }
    scale_param {
        bias_term: true
    }
}
layer {
    name: "Conv7_2/expand/relu"
    type: "ReLU"
    bottom: "Conv7_2/expand"
    top: "Conv7_2/expand"
}
layer {
    name: "Conv7_2/depthwise"
    type: "Convolution"
    bottom: "Conv7_2/expand"
    top: "Conv7_2/depthwise"
    param {
        lr_mult: 1.0
        decay_mult: 1.0
    }
    convolution_param {
        num_output: 960
        bias_term: false
        pad: 1
        kernel_size: 3
        group: 960
        stride: 1
        weight_filler {
            type: "msra"
        }
        engine: CAFFE
    }
}
layer {
    name: "Conv7_2/depthwise/bn"
    type: "BatchNorm"
    bottom: "Conv7_2/depthwise"
    top: "Conv7_2/depthwise"
    include {
        phase: TEST
    }
    batch_norm_param {
        use_global_stats: true
        eps: 1e-5
    }
}
layer {
    name: "Conv7_2/depthwise/bn"
    type: "BatchNorm"
    bottom: "Conv7_2/depthwise"
    top: "Conv7_2/depthwise"
    include {
        phase: TRAIN
    }
    batch_norm_param {
        use_global_stats: false
        eps: 1e-5
    }
}
layer {
    name: "Conv7_2/depthwise/scale"
    type: "Scale"
    bottom: "Conv7_2/depthwise"
    top: "Conv7_2/depthwise"
    param {
        lr_mult: 1
        decay_mult: 0
    }
    param {
        lr_mult: 1
        decay_mult: 0
    }
    scale_param {
        bias_term: true
    }
}
layer {
    name: "Conv7_2/depthwise/relu"
    type: "ReLU"
    bottom: "Conv7_2/depthwise"
    top: "Conv7_2/depthwise"
}
layer {
    name: "Conv7_2/linear"
    type: "Convolution"
    bottom: "Conv7_2/depthwise"
    top: "Conv7_2/linear"
    param {
        lr_mult: 1.0
        decay_mult: 1.0
    }
    convolution_param {
        num_output: 160
        bias_term: false
        pad: 0
        kernel_size: 1
        stride: 1
        weight_filler {
          type: "msra"
        }
    }
}
layer {
    name: "Conv7_2/linear/bn"
    type: "BatchNorm"
    bottom: "Conv7_2/linear"
    top: "Conv7_2/linear"
    include {
        phase: TEST
    }
    batch_norm_param {
        use_global_stats: true
        eps: 1e-5
    }
}
layer {
    name: "Conv7_2/linear/bn"
    type: "BatchNorm"
    bottom: "Conv7_2/linear"
    top: "Conv7_2/linear"
    include {
        phase: TRAIN
    }
    batch_norm_param {
        use_global_stats: false
        eps: 1e-5
    }
}
layer {
    name: "Conv7_2/linear/scale"
    type: "Scale"
    bottom: "Conv7_2/linear"
    top: "Conv7_2/linear"
    scale_param {
        bias_term: true
    }
    param {
        lr_mult: 1
        decay_mult: 0
    }
    param {
        lr_mult: 1
        decay_mult: 0
    }
}

layer{
    name: "Block_7_2"
    type: "Eltwise"
    bottom: "Conv7_1/linear"
    bottom: "Conv7_2/linear"
    top: "Block_7_2"
}

layer {
    name: "Conv7_3/expand"
    type: "Convolution"
    bottom: "Block_7_2"
    top: "Conv7_3/expand"
    param {
        lr_mult: 1.0
        decay_mult: 1.0
    }
    convolution_param {
        num_output: 960
        bias_term: false
        pad: 0
        kernel_size: 1
        stride: 1
        weight_filler {
            type: "msra"
        }
    }
}
layer {
    name: "Conv7_3/expand/bn"
    type: "BatchNorm"
    bottom: "Conv7_3/expand"
    top: "Conv7_3/expand"
    include {
        phase: TEST
    }
    batch_norm_param {
        use_global_stats: true
        eps: 1e-5
    }
}
layer {
    name: "Conv7_3/expand/bn"
    type: "BatchNorm"
    bottom: "Conv7_3/expand"
    top: "Conv7_3/expand"
    include {
        phase: TRAIN
    }
    batch_norm_param {
        use_global_stats: false
        eps: 1e-5
    }
}
layer {
    name: "Conv7_3/expand/scale"
    type: "Scale"
    bottom: "Conv7_3/expand"
    top: "Conv7_3/expand"
    param {
        lr_mult: 1
        decay_mult: 0
    }
    param {
        lr_mult: 1
        decay_mult: 0
    }
    scale_param {
        bias_term: true
    }
}
layer {
    name: "Conv7_3/expand/relu"
    type: "ReLU"
    bottom: "Conv7_3/expand"
    top: "Conv7_3/expand"
}
layer {
    name: "Conv7_3/depthwise"
    type: "Convolution"
    bottom: "Conv7_3/expand"
    top: "Conv7_3/depthwise"
    param {
        lr_mult: 1.0
        decay_mult: 1.0
    }
    convolution_param {
        num_output: 960
        bias_term: false
        pad: 1
        kernel_size: 3
        group: 960
        stride: 1
        weight_filler {
            type: "msra"
        }
        engine: CAFFE
    }
}
layer {
    name: "Conv7_3/depthwise/bn"
    type: "BatchNorm"
    bottom: "Conv7_3/depthwise"
    top: "Conv7_3/depthwise"
    include {
        phase: TEST
    }
    batch_norm_param {
        use_global_stats: true
        eps: 1e-5
    }
}
layer {
    name: "Conv7_3/depthwise/bn"
    type: "BatchNorm"
    bottom: "Conv7_3/depthwise"
    top: "Conv7_3/depthwise"
    include {
        phase: TRAIN
    }
    batch_norm_param {
        use_global_stats: false
        eps: 1e-5
    }
}
layer {
    name: "Conv7_3/depthwise/scale"
    type: "Scale"
    bottom: "Conv7_3/depthwise"
    top: "Conv7_3/depthwise"
    param {
        lr_mult: 1
        decay_mult: 0
    }
    param {
        lr_mult: 1
        decay_mult: 0
    }
    scale_param {
        bias_term: true
    }
}
layer {
    name: "Conv7_3/depthwise/relu"
    type: "ReLU"
    bottom: "Conv7_3/depthwise"
    top: "Conv7_3/depthwise"
}
layer {
    name: "Conv7_3/linear"
    type: "Convolution"
    bottom: "Conv7_3/depthwise"
    top: "Conv7_3/linear"
    param {
        lr_mult: 1.0
        decay_mult: 1.0
    }
    convolution_param {
        num_output: 160
        bias_term: false
        pad: 0
        kernel_size: 1
        stride: 1
        weight_filler {
          type: "msra"
        }
    }
}
layer {
    name: "Conv7_3/linear/bn"
    type: "BatchNorm"
    bottom: "Conv7_3/linear"
    top: "Conv7_3/linear"
    include {
        phase: TEST
    }
    batch_norm_param {
        use_global_stats: true
        eps: 1e-5
    }
}
layer {
    name: "Conv7_3/linear/bn"
    type: "BatchNorm"
    bottom: "Conv7_3/linear"
    top: "Conv7_3/linear"
    include {
        phase: TRAIN
    }
    batch_norm_param {
        use_global_stats: false
        eps: 1e-5
    }
}
layer {
    name: "Conv7_3/linear/scale"
    type: "Scale"
    bottom: "Conv7_3/linear"
    top: "Conv7_3/linear"
    scale_param {
        bias_term: true
    }
    param {
        lr_mult: 1
        decay_mult: 0
    }
    param {
        lr_mult: 1
        decay_mult: 0
    }
}

layer{
    name: "Block_7_3"
    type: "Eltwise"
    bottom: "Block_7_2"
    bottom: "Conv7_3/linear"
    top: "Block_7_3"
}
### conv8, bottlenecks, repeat 1 times ###
layer {
    name: "Conv8/expand"
    type: "Convolution"
    bottom: "Block_7_3"
    top: "Conv8/expand"
    param {
        lr_mult: 1.0
        decay_mult: 1.0
    }
    convolution_param {
        num_output: 960
        bias_term: false
        pad: 0
        kernel_size: 1
        stride: 1
        weight_filler {
            type: "msra"
        }
    }
}
layer {
    name: "Conv8/expand/bn"
    type: "BatchNorm"
    bottom: "Conv8/expand"
    top: "Conv8/expand"
    include {
        phase: TEST
    }
    batch_norm_param {
        use_global_stats: true
        eps: 1e-5
    }
}
layer {
    name: "Conv8/expand/bn"
    type: "BatchNorm"
    bottom: "Conv8/expand"
    top: "Conv8/expand"
    include {
        phase: TRAIN
    }
    batch_norm_param {
        use_global_stats: false
        eps: 1e-5
    }
}
layer {
    name: "Conv8/expand/scale"
    type: "Scale"
    bottom: "Conv8/expand"
    top: "Conv8/expand"
    param {
        lr_mult: 1
        decay_mult: 0
    }
    param {
        lr_mult: 1
        decay_mult: 0
    }
    scale_param {
        bias_term: true
    }
}
layer {
    name: "Conv8/expand/relu"
    type: "ReLU"
    bottom: "Conv8/expand"
    top: "Conv8/expand"
}
layer {
    name: "Conv8/depthwise"
    type: "Convolution"
    bottom: "Conv8/expand"
    top: "Conv8/depthwise"
    param {
        lr_mult: 1.0
        decay_mult: 1.0
    }
    convolution_param {
        num_output: 960
        bias_term: false
        kernel_size: 3
        group: 960
        stride: 1
        weight_filler {
            type: "msra"
        }
        engine: CAFFE
    }
}
layer {
    name: "Conv8/depthwise/bn"
    type: "BatchNorm"
    bottom: "Conv8/depthwise"
    top: "Conv8/depthwise"
    include {
        phase: TEST
    }
    batch_norm_param {
        use_global_stats: true
        eps: 1e-5
    }
}
layer {
    name: "Conv8/depthwise/bn"
    type: "BatchNorm"
    bottom: "Conv8/depthwise"
    top: "Conv8/depthwise"
    include {
        phase: TRAIN
    }
    batch_norm_param {
        use_global_stats: false
        eps: 1e-5
    }
}
layer {
    name: "Conv8/depthwise/scale"
    type: "Scale"
    bottom: "Conv8/depthwise"
    top: "Conv8/depthwise"
    param {
        lr_mult: 1
        decay_mult: 0
    }
    param {
        lr_mult: 1
        decay_mult: 0
    }
    scale_param {
        bias_term: true
    }
}
layer {
    name: "Conv8/depthwise/relu"
    type: "ReLU"
    bottom: "Conv8/depthwise"
    top: "Conv8/depthwise"
}
layer {
    name: "Conv8/linear"
    type: "Convolution"
    bottom: "Conv8/depthwise"
    top: "Conv8/linear"
    param {
        lr_mult: 1.0
        decay_mult: 1.0
    }
    convolution_param {
        num_output: 320
        bias_term: false
        pad: 0
        kernel_size: 1
        stride: 1
        weight_filler {
          type: "msra"
        }
    }
}
layer {
    name: "Conv8/linear/bn"
    type: "BatchNorm"
    bottom: "Conv8/linear"
    top: "Conv8/linear"
    include {
        phase: TEST
    }
    batch_norm_param {
        use_global_stats: true
        eps: 1e-5
    }
}
layer {
    name: "Conv8/linear/bn"
    type: "BatchNorm"
    bottom: "Conv8/linear"
    top: "Conv8/linear"
    include {
        phase: TRAIN
    }
    batch_norm_param {
        use_global_stats: false
        eps: 1e-5
    }
}
layer {
    name: "Conv8/linear/scale"
    type: "Scale"
    bottom: "Conv8/linear"
    top: "Conv8/linear"
    scale_param {
        bias_term: true
    }
    param {
        lr_mult: 1
        decay_mult: 0
    }
    param {
        lr_mult: 1
        decay_mult: 0
    }
}
####conv9, standard convolution ###
layer{
    name: "Conv9"
    type: "Convolution"
    bottom: "Conv8/linear"
    top: "Conv9"
    param{
        lr_mult: 1.0
        decay_mult: 1.0
    }
    convolution_param{
        num_output: 640
        bias_term: false
        kernel_size: 3
        stride: 1
        weight_filler{
            type: "msra"
        }
    }
}
layer{
    name: "Conv9/bn"
    type: "BatchNorm"
    bottom: "Conv9"
    top: "Conv9"
    include {
        phase: TEST
    }
    batch_norm_param {
        use_global_stats: true
        eps: 1e-5
    }
}
layer{
    name: "Conv9/bn"
    type: "BatchNorm"
    bottom: "Conv9"
    top: "Conv9"
    include {
        phase: TRAIN
    }
    batch_norm_param {
        use_global_stats: false
        eps: 1e-5
    }
}
layer{
    name: "Conv9/scale"
    type: "Scale"
    bottom: "Conv9"
    top: "Conv9"
    param {
        lr_mult: 1
        decay_mult: 0
    }
    param {
        lr_mult: 1
        decay_mult: 0
    }
    scale_param {
        bias_term: true
    }
}
layer{
    name: "Conv9/relu"
    type: "ReLU"
    bottom: "Conv9"
    top: "Conv9"
}
#### average pooling #####

layer {
  name: "accuracy/top1"
  type: "Accuracy"
  bottom: "fc10"
  bottom: "label"
  top: "accuracy/top1"
  include {
    phase: TEST
  }
  accuracy_param {
    top_k: 1
  }
}
layer {
  name: "accuracy/top5"
  type: "Accuracy"
  bottom: "fc10"
  bottom: "label"
  top: "accuracy/top5"
  include {
    phase: TEST
  }
  accuracy_param {
    top_k: 3
  }
}
##############SSD Head################
#Block_4_3
layer {
  name: "block_4_3_mbox_loc"
  type: "Convolution"
  bottom: "Block_4_3"
  top: "block_4_3_mbox_loc"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "block_4_3_mbox_loc_perm"
  type: "Permute"
  bottom: "block_4_3_mbox_loc"
  top: "block_4_3_mbox_loc_perm"
  permute_param {
    order: 0
    order: 2
    order: 3
    order: 1
  }
}
layer {
  name: "block_4_3_mbox_loc_flat"
  type: "Flatten"
  bottom: "block_4_3_mbox_loc_perm"
  top: "block_4_3_mbox_loc_flat"
  flatten_param {
    axis: 1
  }
}
layer {
  name: "block_4_3_mbox_conf"
  type: "Convolution"
  bottom: "Block_4_3"
  top: "block_4_3_mbox_conf"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 36
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "block_4_3_mbox_conf_perm"
  type: "Permute"
  bottom: "block_4_3_mbox_conf"
  top: "block_4_3_mbox_conf_perm"
  permute_param {
    order: 0
    order: 2
    order: 3
    order: 1
  }
}
layer {
  name: "block_4_3_mbox_conf_flat"
  type: "Flatten"
  bottom: "block_4_3_mbox_conf_perm"
  top: "block_4_3_mbox_conf_flat"
  flatten_param {
    axis: 1
  }
}
layer {
  name: "block_4_3_mbox_priorbox"
  type: "PriorBox"
  bottom: "Block_4_3"
  bottom: "data"
  top: "block_4_3_mbox_priorbox"
  prior_box_param {
    min_size: 30.0
    max_size: 60.0
    aspect_ratio: 2
    flip: true
    clip: false
    variance: 0.1
    variance: 0.1
    variance: 0.2
    variance: 0.2
    step: 8
    offset: 0.5
  }
}
###Block_5_4########
layer {
  name: "block_5_4_mbox_loc"
  type: "Convolution"
  bottom: "Block_5_4"
  top: "block_5_4_mbox_loc"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 24
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "block_5_4_mbox_loc_perm"
  type: "Permute"
  bottom: "block_5_4_mbox_loc"
  top: "block_5_4_mbox_loc_perm"
  permute_param {
    order: 0
    order: 2
    order: 3
    order: 1
  }
}
layer {
  name: "block_5_4_mbox_loc_flat"
  type: "Flatten"
  bottom: "block_5_4_mbox_loc_perm"
  top: "block_5_4_mbox_loc_flat"
  flatten_param {
    axis: 1
  }
}
layer {
  name: "block_5_4_mbox_conf"
  type: "Convolution"
  bottom: "Block_5_4"
  top: "block_5_4_mbox_conf"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 54
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "block_5_4_mbox_conf_perm"
  type: "Permute"
  bottom: "block_5_4_mbox_conf"
  top: "block_5_4_mbox_conf_perm"
  permute_param {
    order: 0
    order: 2
    order: 3
    order: 1
  }
}
layer {
  name: "block_5_4_mbox_conf_flat"
  type: "Flatten"
  bottom: "block_5_4_mbox_conf_perm"
  top: "block_5_4_mbox_conf_flat"
  flatten_param {
    axis: 1
  }
}
layer {
  name: "block_5_4_mbox_priorbox"
  type: "PriorBox"
  bottom: "Block_5_4"
  bottom: "data"
  top: "block_5_4_mbox_priorbox"
  prior_box_param {
    min_size: 60.0
    max_size: 111.0
    aspect_ratio: 2
    aspect_ratio: 3
    flip: true
    clip: false
    variance: 0.1
    variance: 0.1
    variance: 0.2
    variance: 0.2
    step: 16
    offset: 0.5
  }
}
#######Block_6_3#######
layer {
  name: "block_6_3_mbox_loc"
  type: "Convolution"
  bottom: "Block_6_3"
  top: "block_6_3_mbox_loc"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 24
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "block_6_3_mbox_loc_perm"
  type: "Permute"
  bottom: "block_6_3_mbox_loc"
  top: "block_6_3_mbox_loc_perm"
  permute_param {
    order: 0
    order: 2
    order: 3
    order: 1
  }
}
layer {
  name: "block_6_3_mbox_loc_flat"
  type: "Flatten"
  bottom: "block_6_3_mbox_loc_perm"
  top: "block_6_3_mbox_loc_flat"
  flatten_param {
    axis: 1
  }
}
layer {
  name: "block_6_3_mbox_conf"
  type: "Convolution"
  bottom: "Block_6_3"
  top: "block_6_3_mbox_conf"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 54
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "block_6_3_mbox_conf_perm"
  type: "Permute"
  bottom: "block_6_3_mbox_conf"
  top: "block_6_3_mbox_conf_perm"
  permute_param {
    order: 0
    order: 2
    order: 3
    order: 1
  }
}
layer {
  name: "block_6_3_mbox_conf_flat"
  type: "Flatten"
  bottom: "block_6_3_mbox_conf_perm"
  top: "block_6_3_mbox_conf_flat"
  flatten_param {
    axis: 1
  }
}
layer {
  name: "block_6_3_mbox_priorbox"
  type: "PriorBox"
  bottom: "Block_6_3"
  bottom: "data"
  top: "block_6_3_mbox_priorbox"
  prior_box_param {
    min_size: 111.0
    max_size: 162.0
    aspect_ratio: 2
    aspect_ratio: 3
    flip: true
    clip: false
    variance: 0.1
    variance: 0.1
    variance: 0.2
    variance: 0.2
    step: 32
    offset: 0.5
  }
}
#### Block_7_3#######
layer {
  name: "block_7_3_mbox_loc"
  type: "Convolution"
  bottom: "Block_7_3"
  top: "block_7_3_mbox_loc"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 24
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "block_7_3_mbox_loc_perm"
  type: "Permute"
  bottom: "block_7_3_mbox_loc"
  top: "block_7_3_mbox_loc_perm"
  permute_param {
    order: 0
    order: 2
    order: 3
    order: 1
  }
}
layer {
  name: "block_7_3_mbox_loc_flat"
  type: "Flatten"
  bottom: "block_7_3_mbox_loc_perm"
  top: "block_7_3_mbox_loc_flat"
  flatten_param {
    axis: 1
  }
}
layer {
  name: "block_7_3_mbox_conf"
  type: "Convolution"
  bottom: "Block_7_3"
  top: "block_7_3_mbox_conf"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 54
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "block_7_3_mbox_conf_perm"
  type: "Permute"
  bottom: "block_7_3_mbox_conf"
  top: "block_7_3_mbox_conf_perm"
  permute_param {
    order: 0
    order: 2
    order: 3
    order: 1
  }
}
layer {
  name: "block_7_3_mbox_conf_flat"
  type: "Flatten"
  bottom: "block_7_3_mbox_conf_perm"
  top: "block_7_3_mbox_conf_flat"
  flatten_param {
    axis: 1
  }
}
layer {
  name: "block_7_3_mbox_priorbox"
  type: "PriorBox"
  bottom: "Block_7_3"
  bottom: "data"
  top: "block_7_3_mbox_priorbox"
  prior_box_param {
    min_size: 162.0
    max_size: 213.0
    aspect_ratio: 2
    aspect_ratio: 3
    flip: true
    clip: false
    variance: 0.1
    variance: 0.1
    variance: 0.2
    variance: 0.2
    step: 64
    offset: 0.5
  }
}
#### Conv8 #### 
layer {
  name: "conv8_mbox_loc"
  type: "Convolution"
  bottom: "Conv8/linear"
  top: "conv8_mbox_loc"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "conv8_mbox_loc_perm"
  type: "Permute"
  bottom: "conv8_mbox_loc"
  top: "conv8_mbox_loc_perm"
  permute_param {
    order: 0
    order: 2
    order: 3
    order: 1
  }
}
layer {
  name: "conv8_mbox_loc_flat"
  type: "Flatten"
  bottom: "conv8_mbox_loc_perm"
  top: "conv8_mbox_loc_flat"
  flatten_param {
    axis: 1
  }
}
layer {
  name: "conv8_mbox_conf"
  type: "Convolution"
  bottom: "Conv8/linear"
  top: "conv8_mbox_conf"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 36
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "conv8_mbox_conf_perm"
  type: "Permute"
  bottom: "conv8_mbox_conf"
  top: "conv8_mbox_conf_perm"
  permute_param {
    order: 0
    order: 2
    order: 3
    order: 1
  }
}
layer {
  name: "conv8_mbox_conf_flat"
  type: "Flatten"
  bottom: "conv8_mbox_conf_perm"
  top: "conv8_mbox_conf_flat"
  flatten_param {
    axis: 1
  }
}
layer {
  name: "conv8_mbox_priorbox"
  type: "PriorBox"
  bottom: "Conv8/linear"
  bottom: "data"
  top: "conv8_mbox_priorbox"
  prior_box_param {
    min_size: 213.0
    max_size: 264.0
    aspect_ratio: 2
    flip: true
    clip: false
    variance: 0.1
    variance: 0.1
    variance: 0.2
    variance: 0.2
    step: 100
    offset: 0.5
  }
}
##### Conv9 ###
layer {
  name: "conv9_mbox_loc"
  type: "Convolution"
  bottom: "Conv9"
  top: "conv9_mbox_loc"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "conv9_mbox_loc_perm"
  type: "Permute"
  bottom: "conv9_mbox_loc"
  top: "conv9_mbox_loc_perm"
  permute_param {
    order: 0
    order: 2
    order: 3
    order: 1
  }
}
layer {
  name: "conv9_mbox_loc_flat"
  type: "Flatten"
  bottom: "conv9_mbox_loc_perm"
  top: "conv9_mbox_loc_flat"
  flatten_param {
    axis: 1
  }
}
layer {
  name: "conv9_mbox_conf"
  type: "Convolution"
  bottom: "Conv9"
  top: "conv9_mbox_conf"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 36
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "conv9_mbox_conf_perm"
  type: "Permute"
  bottom: "conv9_mbox_conf"
  top: "conv9_mbox_conf_perm"
  permute_param {
    order: 0
    order: 2
    order: 3
    order: 1
  }
}
layer {
  name: "conv9_mbox_conf_flat"
  type: "Flatten"
  bottom: "conv9_mbox_conf_perm"
  top: "conv9_mbox_conf_flat"
  flatten_param {
    axis: 1
  }
}
layer {
  name: "conv9_mbox_priorbox"
  type: "PriorBox"
  bottom: "Conv9"
  bottom: "data"
  top: "conv9_mbox_priorbox"
  prior_box_param {
    min_size: 264.0
    max_size: 315.0
    aspect_ratio: 2
    flip: true
    clip: false
    variance: 0.1
    variance: 0.1
    variance: 0.2
    variance: 0.2
    step: 300
    offset: 0.5
  }
}
###### merge #####
layer {
  name: "mbox_loc"
  type: "Concat"
  bottom: "block_4_3_mbox_loc_flat"
  bottom: "block_5_4_mbox_loc_flat"
  bottom: "block_6_3_mbox_loc_flat"
  bottom: "block_7_3_mbox_loc_flat"
  bottom: "conv8_mbox_loc_flat"
  bottom: "conv9_mbox_loc_flat"
  top: "mbox_loc"
  concat_param {
    axis: 1
  }
}
layer {
  name: "mbox_conf"
  type: "Concat"
  bottom: "block_4_3_mbox_conf_flat"
  bottom: "block_5_4_mbox_conf_flat"
  bottom: "block_6_3_mbox_conf_flat"
  bottom: "block_7_3_mbox_conf_flat"
  bottom: "conv8_mbox_conf_flat"
  bottom: "conv9_mbox_conf_flat"
  top: "mbox_conf"
  concat_param {
    axis: 1
  }
}
layer {
  name: "mbox_priorbox"
  type: "Concat"
  bottom: "block_4_3_mbox_priorbox"
  bottom: "block_5_4_mbox_priorbox"
  bottom: "block_6_3_mbox_priorbox"
  bottom: "block_7_3_mbox_priorbox"
  bottom: "conv8_mbox_priorbox"
  bottom: "conv9_mbox_priorbox"
  top: "mbox_priorbox"
  concat_param {
    axis: 2
  }
}
layer {
  name: "mbox_loss"
  type: "MultiBoxLoss"
  bottom: "mbox_loc"
  bottom: "mbox_conf"
  bottom: "mbox_priorbox"
  bottom: "label"
  top: "mbox_loss"
  include {
    phase: TRAIN
  }
  propagate_down: true
  propagate_down: true
  propagate_down: false
  propagate_down: false
  loss_param {
    normalization: VALID
  }
  multibox_loss_param {
    loc_loss_type: SMOOTH_L1
    conf_loss_type: SOFTMAX
    loc_weight: 1.0
    num_classes: 9
    share_location: true
    match_type: PER_PREDICTION
    overlap_threshold: 0.5
    use_prior_for_matching: true
    background_label_id: 0
    use_difficult_gt: true
    neg_pos_ratio: 3.0
    neg_overlap: 0.5
    code_type: CENTER_SIZE
    ignore_cross_boundary_bbox: false
    mining_type: MAX_NEGATIVE
  }
}

